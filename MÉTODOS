// Alice Alves e Lívia Christine
package Parte2;
public class Metodos_trabalho {
    public static void Soma_Linhas(int m[][], int vetor[]) {
        for(int i = 0; i < 3; ++i) {
            for(int j = 0; j < 3; ++j) {
               vetor[i] = vetor[i] + m[i][j];
            }
            System.out.println("O valor da soma da linha " + (i+1) + " no metodo do pacote = " + vetor[i]);
        }
    }
public static int Contar_Primos(int m[][]){
int quant = 0;
                    System.out.println("Os números primos dessa matriz são: ");
                    for(int i = 0; i<m.length; i++){
                        for(int j = 0; j<m[i].length; j++){
                            for(int k = 1; k<=m[i][j]; k++){
                                if(m[i][j]%k == 0){
                                    quant++;
                                }
                           }
                            if(quant <= 2){
                                System.out.println(m[i][j]);
                                System.out.println("Posição: ");
                                System.out.println("Linha "+(i+1));
                                System.out.println("Coluna "+(j+1));
                                System.out.println(" ");

                            }
                            quant = 0;
                        }
                    }
        return quant;
}
 public static int calcularFatorial(int i) {
        int f = 1;

        for (int a = i; a > 1; a--) {
            f *= a;
        }
        return f;
    }
 public static double somaDasColunasFatorial(int matriz [][]) {
        int rowsLength = matriz.length;
        int colLength = matriz[rowsLength - 1].length;

        for (int i = 0; i < colLength; i++) {
            int sum = 0;

            for (int j = 0; j < rowsLength; j++) {
                int num = calcularFatorial(matriz[j][i]);

                sum += num;
            }

            System.out.println("O valor da soma fatorial dos elementos da coluna " + (i + 1) + " é igual à: " + sum + "\n");
        }
        return 0;
 }
 public static void somaLinhafatorial (int m[][], int vetor[], int i){
        int t = 0;
        for (int a = 0; a<i; a++){
            vetor[a] = 0;
            for (int b = 0; b<i; b++){
                int fat= 1;
                for (int c = 1; c<=m[a][b]; c++){
                    fat = fat * c;
                }
                System.out.println("O fatorial do elemento " + m[a][b] + " na linha " + (a+1) + " e na coluna " + (b+1)+ " é igual à: " + fat + " \n");
                vetor[a] = vetor[a] + fat;
            }
            System.out.println("A soma dos fatoriais na linha " + (a+1) + " é igual à: " + vetor[a] + " \n");
            t = t + vetor[a];
        }
        System.out.println("No total, a soma de todos os fatoriais da matriz, é igual à: " + t + "\n");
    }
 public static void Diagonal_Secundaria (int matriz[][], int i){
        int dia = 0, col = (i-1);
        for (int a = 0; a<i; a++){
            dia = dia + matriz[a][col];
            col--;
        }
        System.out.println("O resultado da diagonal secundária da matriz equivale à: " + dia + "\n");
    }   
    public static void diagonal_Principal (int matriz[][], int i){
        int diagonal = 0;
        for (int a = 0; a<i; a++){
            for (int b = 0; b<i; b++){
                if (a == b) diagonal = diagonal + matriz[a][b];
            }
        }
        System.out.println("O valor da diagonal principal da matriz equivale à: " + diagonal + "\n");
    }
   public static double Matriz_Transposta (int matriz[][], int i){
            System.out.println("O resultado da transposta da matriz equivale a: \n");
		int[][] matrizTransposta = new int[i][i];
		for(int a = 0 ; a < i ; a++){
			for(int b = 0 ; b < i; b++){
				matrizTransposta[b][b] = matriz[b][a];
				System.out.print(" [" + matrizTransposta[b][b] + "] ");
			}
			System.out.println();
		}		
        return 0;
	}		
   public static double calculoDeterminante (int[][] matriz) {
		int det = 0;
		int kAux = 0;
		int [][] aux = new int [matriz.length-1][matriz[0].length-1];
		if(matriz.length == 1 && matriz[0].length==1)
			return matriz[0][0];
		for (int i = 0; i < matriz[0].length; i++) {	
			for (int j = 1; j < matriz.length; j++) {
				
				for (int k = 0; k < matriz[0].length; k++) {
					if(k==i)
						continue;
					
					aux[j-1][kAux] = matriz[j][k];
					kAux++;
				}
				kAux = 0;
			}
			det += (Math.pow(-1, 1+(i+1)))*calculoDeterminante(aux);		
		}
		return det;
                
	}
   public static float mediaDiagonalPrincipal(int[][] matriz) {
       float somaDiagonalPrincipal = 0, media, cont = 0;
       for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j<matriz[0].length; j++) {
                if (i == j) {
                    cont++;
                    somaDiagonalPrincipal = somaDiagonalPrincipal + matriz[i][j];
                }
            }
        }
        media = somaDiagonalPrincipal/cont;
        return media;
    }
    }
